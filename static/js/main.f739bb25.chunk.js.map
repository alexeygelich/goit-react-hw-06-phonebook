{"version":3,"sources":["components/FormAddContacts/FormAddContacts.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","redux/phonebook/phonebookActions.js","redux/phonebook/phonebookReducer.js","redux/store.js","components/Alert/index.js","components/Alert/Alert.jsx","components/FormAddContacts/FormAddContacts.jsx","components/FormAddContacts/index.js","components/Filter/Filter.jsx","components/Filter/index.js","components/ContactItem/ContactItem.jsx","components/ContactItem/index.js","components/ContactList/index.js","components/ContactList/ContactList.jsx","components/Container/index.js","components/Container/Container.jsx","App.js","index.js"],"names":["module","exports","addItem","createAction","name","number","payload","id","uuid","removeItem","filter","initialState","JSON","parse","localStorage","getItem","items","createReducer","phonebookActions","state","item","combineReducers","store","configureStore","reducer","contacts","phonebookReducer","Alert","message","className","FormAddContacts","isAdded","handleChangeName","setState","handleChangeNumber","handleClearForm","handlesubmit","e","preventDefault","props","setTimeout","find","el","addContact","this","styles","form","onSubmit","label","type","placeholder","value","onChange","target","button","CSSTransition","in","timeout","classNames","unmountOnExit","Component","mapDispatchToprops","connect","Filter","onChangeFilter","handleDelete","Contacts","listItem","onClick","ContactList","visibleContact","TransitionGroup","component","map","Container","children","App","getFiteredContact","contact","toLowerCase","includes","prevProps","PrevState","localContacts","stringify","setItem","appear","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f739bb25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormAddContacts_form__2MdXG\",\"label\":\"FormAddContacts_label__2GkhV\",\"button\":\"FormAddContacts_button__2dp95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__ZX0Xm\",\"button\":\"ContactItem_button__1siMh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\"};","// import { ADD, REMOVE, FILTER } from \"./phonebookTypes\";\nimport { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuid } from \"uuid\";\n\nconst addItem = createAction(\"phonebook/add\", (name, number) => ({ payload: { id: uuid(), name, number } }));\n\n// const addItem = (name, number) => {\n//   return {\n//     type: ADD,\n//     payload: {\n//       id: uuid(),\n//       name: name,\n//       number: number,\n//     },\n//   };\n// };\n\nconst removeItem = createAction(\"phonebook/remove\");\n\n// const removeItem = (id) => {\n//   return {\n//     type: REMOVE,\n//     payload: id,\n//   };\n// };\n\nconst filter = createAction(\"phonebook/filter\");\n\n// const filter = (str) => {\n//   return {\n//     type: FILTER,\n//     payload: str,\n//   };\n// };\n\nexport default { addItem, removeItem, filter };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n// import { ADD, REMOVE, FILTER } from \"./phonebookTypes\";\nimport phonebookActions from \"./phonebookActions\";\n\nconst conactsBase = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nconst localstorageContacts = JSON.parse(localStorage.getItem(\"contacts\"));\nconst initialState = localstorageContacts || conactsBase;\n\nconst addContact = (state, { payload }) => [...state, payload];\nconst removeContact = (state, { payload }) => state.filter((item) => item.id !== payload);\nconst onFilter = (state, { payload }) => payload;\n\nconst items = createReducer(initialState, {\n  [phonebookActions.addItem]: addContact,\n  [phonebookActions.removeItem]: removeContact,\n});\nconst filter = createReducer(\"\", {\n  [phonebookActions.filter]: onFilter,\n});\n\n// const itemReducer = (state = initialState, { type, payload }) => {\n//   switch (type) {\n//     case phonebookActions.addItem.type:\n//       return [...state, payload];\n\n//     case phonebookActions.removeItem.type:\n//       // const idx = state.indexOf(payload);\n//       return state.filter((item) => item.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case phonebookActions.filter.type:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nexport default combineReducers({ items, filter });\n","// import { combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport phonebookReducer from \"./phonebook/phonebookReducer\";\n\n// const rootReducer = combineReducers({\n//   contacts: phonebookReducer,\n// });\n\nconst store = configureStore({\n  reducer: {\n    contacts: phonebookReducer,\n  },\n});\n\nexport default store;\n","import Alert from './Alert';\n\nexport default Alert;\n","import React from \"react\";\nimport \"./Alert.css\";\n\nconst Alert = ({ message }) => <div className=\"AlertWrapper\">{message}</div>;\n\nexport default Alert;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"../../redux/phonebook/phonebookActions\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Alert from \"../Alert\";\nimport styles from \"./FormAddContacts.module.css\";\n\nclass FormAddContacts extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    isAdded: false,\n    message: \"\",\n  };\n\n  handleChangeName = (name) => {\n    this.setState({ name });\n  };\n\n  handleChangeNumber = (number) => {\n    this.setState({ number });\n  };\n\n  handleClearForm = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  handlesubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n\n    if (!name || !number) {\n      this.setState({ isAdded: true, message: \"Fill in all the fields\" });\n      setTimeout(() => {\n        this.setState({ isAdded: false });\n      }, 2000);\n      return;\n    }\n\n    if (contacts.find((el) => el.name === name)) {\n      this.setState({ isAdded: true, message: \"Contact already exist\" });\n      setTimeout(() => {\n        this.setState({ isAdded: false });\n      }, 2000);\n    } else {\n      this.props.addContact(name, number);\n      this.setState({ isAdded: true, message: \"Contact added successfully\" });\n      setTimeout(() => {\n        this.setState({ isAdded: false });\n      }, 2000);\n    }\n    this.handleClearForm();\n  };\n\n  render() {\n    const { name, number, isAdded, message } = this.state;\n    return (\n      <>\n        <form className={styles.form} onSubmit={this.handlesubmit}>\n          <label className={styles.label}>\n            Name\n            <input\n              type=\"text\"\n              placeholder=\"Name Surname\"\n              value={name}\n              onChange={(e) => this.handleChangeName(e.target.value)}\n            />\n          </label>\n          <label className={styles.label}>\n            Number\n            <input\n              type=\"tel\"\n              placeholder=\"Phone\"\n              value={number}\n              onChange={(e) => this.handleChangeNumber(e.target.value)}\n            />\n          </label>\n          <button className={styles.button} type=\"submit\">\n            Add Contact\n          </button>\n        </form>\n        <CSSTransition in={isAdded} timeout={500} classNames=\"fade-alert\" unmountOnExit>\n          <Alert message={message} />\n        </CSSTransition>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts }) => ({\n  contacts: contacts.items,\n});\n\nconst mapDispatchToprops = {\n  addContact: phonebookActions.addItem,\n};\n\nexport default connect(mapStateToProps, mapDispatchToprops)(FormAddContacts);\n","import FormAddContacts from './FormAddContacts';\n\nexport default FormAddContacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"../../redux/phonebook/phonebookActions\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ filter, onChange }) => {\n  const handleChange = (e) => {\n    onChange(e.target.value);\n  };\n\n  return (\n    <label className={styles.label}>\n      Find Contacts\n      <input type=\"text\" placeholder=\"name\" value={filter} onChange={handleChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  filter: contacts.filter,\n});\n\nconst mapDispatchToprops = {\n  onChange: phonebookActions.filter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToprops)(Filter);\n","import Filter from './Filter';\n\nexport default Filter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactItem.module.css\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"../../redux/phonebook/phonebookActions\";\n\nconst ContactItem = ({ el, handleDelete, onChangeFilter }) => {\n  const { name, number, id } = el;\n  const handleClick = () => {\n    handleDelete(id);\n    onChangeFilter(\"\");\n  };\n  return (\n    <li className={styles.listItem}>\n      <span>{name}:</span> <span>{number}</span>\n      <button className={styles.button} type=\"button\" onClick={handleClick}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  el: PropTypes.object.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToprops = {\n  onChangeFilter: phonebookActions.filter,\n  handleDelete: phonebookActions.removeItem,\n};\n\nexport default connect(null, mapDispatchToprops)(ContactItem);\n","import Contacts from './ContactItem';\n\nexport default Contacts;\n","import ContactList from './ContactList';\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactItem from \"../ContactItem\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport \"./ContactList.css\";\n\nconst ContactList = ({ visibleContact }) => (\n  <TransitionGroup component=\"ul\" className=\"contact-list\">\n    {visibleContact.map((el) => {\n      return (\n        <CSSTransition key={el.id} timeout={500} classNames=\"item\">\n          <ContactItem el={el} />\n        </CSSTransition>\n      );\n    })}\n  </TransitionGroup>\n);\n\nContactList.propTypes = {\n  visibleContact: PropTypes.array.isRequired,\n};\n\nexport default ContactList;\n","import Container from './Container';\n\nexport default Container;\n","import React from 'react';\nimport './Container.css';\n\nconst Container = ({children}) => (\n  <div className=\"ContainerWrapper\">\n    {children}\n  </div>\n);\n\n\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport FormAddContacts from \"./components/FormAddContacts\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Container from \"./components/Container\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport phonebookActions from \"./redux/phonebook/phonebookActions\";\n\nclass App extends Component {\n  componentDidUpdate(prevProps, PrevState) {\n    if (prevProps.contacts !== this.props.contacts) {\n      const localContacts = JSON.stringify(this.props.contacts);\n      localStorage.setItem(\"contacts\", localContacts);\n    }\n  }\n\n  getFiteredContact = () => {\n    const { contacts, filter } = this.props;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  render() {\n    const { contacts } = this.props;\n    const visibleContact = this.getFiteredContact();\n    return (\n      <Container>\n        <section>\n          <CSSTransition in={true} appear={true} timeout={500} classNames=\"fade-logo\" unmountOnExit>\n            <h2 className=\"logo\">Phonebook</h2>\n          </CSSTransition>\n          <FormAddContacts />\n        </section>\n        <section>\n          <h2>Contacts</h2>\n          <CSSTransition in={contacts.length > 1} timeout={500} classNames=\"fade-filter\" unmountOnExit>\n            <Filter />\n          </CSSTransition>\n\n          <ContactList visibleContact={visibleContact} />\n        </section>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts }) => ({\n  contacts: contacts.items,\n  filter: contacts.filter,\n});\n\nconst mapDispatchToprops = {\n  addItem: phonebookActions.addItem,\n};\nexport default connect(mapStateToProps, mapDispatchToprops)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}